{"ast":null,"code":"var _jsxFileName = \"/home/clouddive-2-sunil/React/cric-score-app/src/hoc/withErrorHandler/withErrorHandler.js\";\nimport React, { Component } from 'react';\nimport Modal from '../../Components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        error: null\n      };\n\n      this.errorConfirmHandler = () => {\n        this.setState({\n          error: null\n        });\n        console.log('j');\n      };\n    }\n\n    componentWillMount() {\n      this.reqInterceptors = axios.interceptors.request.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      this.resInterceptors = axios.interceptors.response.use(res => res, error => {\n        this.setState({\n          error: error\n        });\n      });\n    }\n\n    componentWillUnmount() {\n      console.log(\"will unmount\" + this.reqInterceptors);\n      axios.interceptors.request.eject(this.reqInterceptors);\n      axios.interceptors.response.eject(this.resInterceptors);\n    }\n\n    render() {\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.error,\n        modalClosed: this.errorConfirmHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.state.error ? this.state.error.message : null), React.createElement(WrappedComponent, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })));\n    }\n\n  }, _temp;\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/home/clouddive-2-sunil/React/cric-score-app/src/hoc/withErrorHandler/withErrorHandler.js"],"names":["React","Component","Modal","Aux","withErrorHandler","WrappedComponent","axios","state","error","errorConfirmHandler","setState","console","log","componentWillMount","reqInterceptors","interceptors","request","use","req","resInterceptors","response","res","componentWillUnmount","eject","render","message","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,gBAAD,EAAmBC,KAAnB,KAA6B;AAAA;;AAClD,iBAAO,cAAcL,SAAd,CAAwB;AAAA;AAAA;AAAA,WAC3BM,KAD2B,GACnB;AACJC,QAAAA,KAAK,EAAE;AADH,OADmB;;AAAA,WAqB3BC,mBArB2B,GAqBL,MAAM;AACxB,aAAKC,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAd;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACH,OAxB0B;AAAA;;AAK3BC,IAAAA,kBAAkB,GAAG;AACjB,WAAKC,eAAL,GAAuBR,KAAK,CAACS,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,GAAG,IAAI;AACzD,aAAKR,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAd;AACA,eAAOU,GAAP;AACH,OAHsB,CAAvB;AAIA,WAAKC,eAAL,GAAuBb,KAAK,CAACS,YAAN,CAAmBK,QAAnB,CAA4BH,GAA5B,CAAgCI,GAAG,IAAIA,GAAvC,EAA4Cb,KAAK,IAAI;AACxE,aAAKE,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACH,OAFsB,CAAvB;AAGH;;AAEDc,IAAAA,oBAAoB,GAAE;AAClBX,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiB,KAAKE,eAAlC;AACAR,MAAAA,KAAK,CAACS,YAAN,CAAmBC,OAAnB,CAA2BO,KAA3B,CAAiC,KAAKT,eAAtC;AACAR,MAAAA,KAAK,CAACS,YAAN,CAAmBK,QAAnB,CAA4BG,KAA5B,CAAkC,KAAKJ,eAAvC;AACH;;AAMDK,IAAAA,MAAM,GAAG;AAGL,aACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWC,KADrB;AAEI,QAAA,WAAW,EAAE,KAAKC,mBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGK,KAAKF,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWC,KAAX,CAAiBiB,OAApC,GAA8C,IAHnD,CADJ,EAMI,oBAAC,gBAAD,oBAAsB,KAAKC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANJ,CADJ;AAUH;;AAtC0B,GAA/B;AAwCH,CAzCD;;AA2CA,eAAetB,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport Modal from '../../Components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n        state = {\n            error: null,\n        }\n\n        componentWillMount() {\n            this.reqInterceptors = axios.interceptors.request.use(req => {\n                this.setState({ error: null })\n                return req;\n            })\n            this.resInterceptors = axios.interceptors.response.use(res => res, error => {\n                this.setState({ error: error })\n            })\n        }\n\n        componentWillUnmount(){\n            console.log(\"will unmount\" + this.reqInterceptors);\n            axios.interceptors.request.eject(this.reqInterceptors);\n            axios.interceptors.response.eject(this.resInterceptors);\n        }\n\n        errorConfirmHandler = () => {\n            this.setState({ error: null });\n            console.log('j')\n        }\n        render() {\n\n\n            return (\n                <Aux>\n                    <Modal\n                        show={this.state.error}\n                        modalClosed={this.errorConfirmHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props}/>\n                </Aux>\n            )\n        }\n    }\n}\n\nexport default withErrorHandler;"]},"metadata":{},"sourceType":"module"}