{"ast":null,"code":"var _jsxFileName = \"/home/clouddive-2-sunil/React/cric-score-app/src/Components/MatcheList/UpcomingMatches/UpcomingMatches.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Match from '../../Match/Match';\nimport axios from '../../../axios-matches';\nimport Spinner from '../../UI/Spinner/Spinner';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../../Store/actions/index';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\n\nclass UpcomingMatches extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      matchCalendar: [],\n      upcomingArray: [],\n      loading: true\n    };\n\n    this.mapResponse = () => {\n      const response = this.state.matchCalendar;\n      let upcomingArray = response.splice(0, 10);\n      this.setState({\n        upcomingArray: upcomingArray\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMatchesCalander();\n  }\n\n  fetchMatchesCalander() {\n    let obj = {\n      \"apikey\": \"tTzabHsmnIPgA6CNdPwKGRCpduW2\"\n    };\n    axios.post('matchCalendar/', obj).then(res => {\n      this.setState({\n        matchCalendar: res ? res.data ? res.data.data : [] : [],\n        loading: false\n      });\n      this.mapResponse();\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    let match = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n    let matchData; // = this.state.matchCalendar['0...99']\n\n    if (!this.state.loading && this.state.upcomingArray && this.state.upcomingArray.length > 1) {\n      matchData = this.state.upcomingArray;\n      match = matchData.map((match, index) => {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(Match, {\n          date: match.date,\n          name: match.name,\n          dateTimeGmt: \"\",\n          matchStarted: \"false\",\n          teamOne: \"\",\n          teamTwo: \"\",\n          toss: \"No Toss\",\n          type: \"\",\n          uniqueId: match.unique_id,\n          clicked: this.fetchMatchDetail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }));\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, match);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.match.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitMatches: id => dispatch(actionCreators.initMatches(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(UpcomingMatches, axios));","map":{"version":3,"sources":["/home/clouddive-2-sunil/React/cric-score-app/src/Components/MatcheList/UpcomingMatches/UpcomingMatches.js"],"names":["React","Component","Aux","Match","axios","Spinner","connect","actionCreators","withErrorHandler","UpcomingMatches","state","matchCalendar","upcomingArray","loading","mapResponse","response","splice","setState","componentDidMount","fetchMatchesCalander","obj","post","then","res","data","catch","err","console","log","render","match","matchData","length","map","index","date","name","unique_id","fetchMatchDetail","mapStateToProps","mapDispatchToProps","dispatch","onInitMatches","id","initMatches"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Match from '../../Match/Match';\nimport axios from '../../../axios-matches';\nimport Spinner from '../../UI/Spinner/Spinner';\n\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../../Store/actions/index';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\n\nclass UpcomingMatches extends Component {\n\n    state = {\n        matchCalendar: [],\n        upcomingArray : [],\n        loading : true,\n    }\n\n    componentDidMount() {\n        this.fetchMatchesCalander();\n    }\n\n    fetchMatchesCalander() {\n        let obj = {\n            \"apikey\": \"tTzabHsmnIPgA6CNdPwKGRCpduW2\"\n        }\n        axios.post('matchCalendar/', obj)\n            .then(res => {\n                this.setState({ matchCalendar: res ? res.data ? res.data.data : []:[], loading:false });\n                this.mapResponse()\n            })\n            .catch(err => console.log(err));\n    }\n\n    mapResponse =()=>{\n        const response = this.state.matchCalendar ;\n        let upcomingArray = response.splice(0, 10);\n        this.setState({upcomingArray : upcomingArray});\n    }\n\n    render() {\n        let match = <Spinner />;\n        let matchData; \n        // = this.state.matchCalendar['0...99']\n        if (!this.state.loading && this.state.upcomingArray && this.state.upcomingArray.length > 1) {\n             matchData = this.state.upcomingArray;\n            match = matchData.map((match, index) => {\n                return (\n                    <div  key={index}>\n                        <Match\n                            date={match.date}\n                            name={match.name}\n                            dateTimeGmt=''\n                            matchStarted='false'\n                            teamOne=''\n                            teamTwo=''\n                            toss='No Toss'\n                            type=''\n                            uniqueId={match.unique_id}\n                            clicked={this.fetchMatchDetail}\n                        />\n                    </div>)\n            })\n        }\n        return (\n            <Aux>\n                {match}\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n\n        data: state.match.data,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onInitMatches: (id) => dispatch(actionCreators.initMatches(id))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(UpcomingMatches ,axios));"]},"metadata":{},"sourceType":"module"}