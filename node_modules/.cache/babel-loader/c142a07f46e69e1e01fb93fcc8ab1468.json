{"ast":null,"code":"var _jsxFileName = \"/home/clouddive-2-sunil/React/cric-score-app/src/Components/MatcheList/UpcomingMatches/UpcomingMatches.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Match from '../../Match/Match';\nimport axios from '../../../axios-matches';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../../Store/actions/index';\nimport { connect } from 'react-redux';\n\nclass UpcomingMatches extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      matchCalendar: [],\n      upcomingArray: []\n    };\n\n    this.mapResponse = () => {\n      const response = this.props.matches;\n      console.log(response);\n      let upcomingArray = response.splice(0, 10);\n      this.setState({\n        upcomingArray: upcomingArray\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.onInitMatches();\n    this.mapResponse();\n  } // fetchMatchesCalander() {\n  //     let obj = {\n  //         \"apikey\": \"tTzabHsmnIPgA6CNdPwKGRCpduW2\"\n  //     }\n  //     axios.post('matchCalendar/', obj)\n  //         .then(res => {\n  //             this.setState({ matchCalendar: res ? res.data ? res.data.data : []:[] });\n  //             this.mapResponse()\n  //         })\n  //         .catch(err => console.log(err));\n  // }\n\n\n  render() {\n    let match = 'No matches available';\n    let matchData; // = this.state.matchCalendar['0...99']\n\n    if (this.state.upcomingArray && this.state.upcomingArray.length > 1) {\n      matchData = this.state.upcomingArray;\n      match = matchData.map((match, index) => {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(Match, {\n          date: match.date,\n          name: match.name,\n          dateTimeGmt: \"\",\n          matchStarted: \"false\",\n          teamOne: \"\",\n          teamTwo: \"\",\n          toss: \"No Toss\",\n          type: \"\",\n          uniqueId: match.unique_id,\n          clicked: this.fetchMatchDetail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }));\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, match);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    matches: state.data,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitMatches: () => dispatch(actions.initMatches())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(UpcomingMatches, axios));","map":{"version":3,"sources":["/home/clouddive-2-sunil/React/cric-score-app/src/Components/MatcheList/UpcomingMatches/UpcomingMatches.js"],"names":["React","Component","Aux","Match","axios","withErrorHandler","actions","connect","UpcomingMatches","state","matchCalendar","upcomingArray","mapResponse","response","props","matches","console","log","splice","setState","componentDidMount","onInitMatches","render","match","matchData","length","map","index","date","name","unique_id","fetchMatchDetail","mapStateToProps","data","error","mapDispatchToProps","dispatch","initMatches"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,gBAAP,MAA6B,gDAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,8BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAN,SAA8BP,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCQ,KAFoC,GAE5B;AACJC,MAAAA,aAAa,EAAE,EADX;AAEJC,MAAAA,aAAa,EAAG;AAFZ,KAF4B;;AAAA,SAwBpCC,WAxBoC,GAwBvB,MAAI;AACb,YAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,OAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,UAAIF,aAAa,GAAGE,QAAQ,CAACK,MAAT,CAAgB,CAAhB,EAAmB,EAAnB,CAApB;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,aAAa,EAAGA;AAAjB,OAAd;AACH,KA7BmC;AAAA;;AAOpCS,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,aAAL;AACA,SAAKT,WAAL;AACH,GAVmC,CAYpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AASAU,EAAAA,MAAM,GAAG;AACL,QAAIC,KAAK,GAAG,sBAAZ;AACA,QAAIC,SAAJ,CAFK,CAGL;;AACA,QAAI,KAAKf,KAAL,CAAWE,aAAX,IAA4B,KAAKF,KAAL,CAAWE,aAAX,CAAyBc,MAAzB,GAAkC,CAAlE,EAAqE;AAChED,MAAAA,SAAS,GAAG,KAAKf,KAAL,CAAWE,aAAvB;AACDY,MAAAA,KAAK,GAAGC,SAAS,CAACE,GAAV,CAAc,CAACH,KAAD,EAAQI,KAAR,KAAkB;AACpC,eACI;AAAM,UAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD;AACI,UAAA,IAAI,EAAEJ,KAAK,CAACK,IADhB;AAEI,UAAA,IAAI,EAAEL,KAAK,CAACM,IAFhB;AAGI,UAAA,WAAW,EAAC,EAHhB;AAII,UAAA,YAAY,EAAC,OAJjB;AAKI,UAAA,OAAO,EAAC,EALZ;AAMI,UAAA,OAAO,EAAC,EANZ;AAOI,UAAA,IAAI,EAAC,SAPT;AAQI,UAAA,IAAI,EAAC,EART;AASI,UAAA,QAAQ,EAAEN,KAAK,CAACO,SATpB;AAUI,UAAA,OAAO,EAAE,KAAKC,gBAVlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAeH,OAhBO,CAAR;AAiBH;;AACD,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKR,KADL,CADJ;AAKH;;AA5DmC;;AA8DxC,MAAMS,eAAe,GAAGvB,KAAK,IAAI;AAC7B,SAAO;AACHM,IAAAA,OAAO,EAAEN,KAAK,CAACwB,IADZ;AAEHC,IAAAA,KAAK,EAAEzB,KAAK,CAACyB;AAFV,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHf,IAAAA,aAAa,EAAE,MAAMe,QAAQ,CAAC9B,OAAO,CAAC+B,WAAR,EAAD;AAD1B,GAAP;AAGH,CAJD;;AAMA,eAAe9B,OAAO,CAACyB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C9B,gBAAgB,CAACG,eAAD,EAAkBJ,KAAlB,CAA7D,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Match from '../../Match/Match';\nimport axios from '../../../axios-matches';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../../Store/actions/index';\nimport { connect } from 'react-redux';\n\nclass UpcomingMatches extends Component {\n\n    state = {\n        matchCalendar: [],\n        upcomingArray : [],\n    }\n\n    componentDidMount() {\n        this.onInitMatches();\n        this.mapResponse();\n    }\n\n    // fetchMatchesCalander() {\n    //     let obj = {\n    //         \"apikey\": \"tTzabHsmnIPgA6CNdPwKGRCpduW2\"\n    //     }\n    //     axios.post('matchCalendar/', obj)\n    //         .then(res => {\n    //             this.setState({ matchCalendar: res ? res.data ? res.data.data : []:[] });\n    //             this.mapResponse()\n    //         })\n    //         .catch(err => console.log(err));\n    // }\n\n    mapResponse =()=>{\n        const response = this.props.matches ;\n        console.log(response);\n        let upcomingArray = response.splice(0, 10);\n        this.setState({upcomingArray : upcomingArray});\n    }\n\n    render() {\n        let match = 'No matches available';\n        let matchData; \n        // = this.state.matchCalendar['0...99']\n        if (this.state.upcomingArray && this.state.upcomingArray.length > 1) {\n             matchData = this.state.upcomingArray;\n            match = matchData.map((match, index) => {\n                return (\n                    <div  key={index}>\n                        <Match\n                            date={match.date}\n                            name={match.name}\n                            dateTimeGmt=''\n                            matchStarted='false'\n                            teamOne=''\n                            teamTwo=''\n                            toss='No Toss'\n                            type=''\n                            uniqueId={match.unique_id}\n                            clicked={this.fetchMatchDetail}\n                        />\n                    </div>)\n            })\n        }\n        return (\n            <Aux>\n                {match}\n            </Aux>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        matches: state.data,\n        error: state.error\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onInitMatches: () => dispatch(actions.initMatches()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(UpcomingMatches ,axios));"]},"metadata":{},"sourceType":"module"}