{"ast":null,"code":"var _jsxFileName = \"/home/clouddive-2-sunil/React/cric-score-app/src/Components/MatcheList/LiveMatches/LiveMatches.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Match from '../../Match/Match';\nimport axios from '../../../axios-matches';\n\nclass LiveMatches extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      liveMatches: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchLiveMatches();\n  }\n\n  fetchLiveMatches() {\n    let obj = {\n      \"apikey\": \"tTzabHsmnIPgA6CNdPwKGRCpduW2\"\n    };\n    axios.post('', obj).then(res => {\n      console.log(res);\n      this.setState({\n        liveMatches: res ? res.data ? res.data.matches : [] : []\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    let match = 'No matches available';\n\n    if (this.state.liveMatches.length > 1) {\n      const matchData = this.state.liveMatches;\n      match = matchData.map(match => {\n        return React.createElement(Match, {\n          key: match.unique_id,\n          date: match.date,\n          dateTimeGmt: match.dateTimeGmt,\n          matchStarted: match.matchStarted,\n          teamOne: match.team - 1,\n          teamTwo: match.team - 2,\n          toss: match.toss_winner_team,\n          tyepe: match.type,\n          uniqueId: match.unique_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, match);\n  }\n\n}\n\nexport default LiveMatches;","map":{"version":3,"sources":["/home/clouddive-2-sunil/React/cric-score-app/src/Components/MatcheList/LiveMatches/LiveMatches.js"],"names":["React","Component","Aux","Match","axios","LiveMatches","state","liveMatches","componentDidMount","fetchLiveMatches","obj","post","then","res","console","log","setState","data","matches","catch","err","render","match","length","matchData","map","unique_id","date","dateTimeGmt","matchStarted","team","toss_winner_team","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCK,KAFgC,GAExB;AACJC,MAAAA,WAAW,EAAE;AADT,KAFwB;AAAA;;AAMhCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,gBAAL;AACH;;AAEDA,EAAAA,gBAAgB,GAAG;AACf,QAAIC,GAAG,GAAG;AACN,gBAAU;AADJ,KAAV;AAGAN,IAAAA,KAAK,CAACO,IAAN,CAAW,EAAX,EAAeD,GAAf,EACKE,IADL,CACUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAKG,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAEM,GAAG,GAAGA,GAAG,CAACI,IAAJ,GAAWJ,GAAG,CAACI,IAAJ,CAASC,OAApB,GAA8B,EAAjC,GAAsC;AAAxD,OAAd;AACH,KAJL,EAKKC,KALL,CAKWC,GAAG,IAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CALlB;AAMH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,KAAK,GAAG,sBAAZ;;AACA,QAAI,KAAKhB,KAAL,CAAWC,WAAX,CAAuBgB,MAAvB,GAAgC,CAApC,EAAuC;AACnC,YAAMC,SAAS,GAAG,KAAKlB,KAAL,CAAWC,WAA7B;AACAe,MAAAA,KAAK,GAAGE,SAAS,CAACC,GAAV,CAAeH,KAAD,IAAW;AAC7B,eACI,oBAAC,KAAD;AACI,UAAA,GAAG,EAAEA,KAAK,CAACI,SADf;AAEI,UAAA,IAAI,EAAEJ,KAAK,CAACK,IAFhB;AAGI,UAAA,WAAW,EAAEL,KAAK,CAACM,WAHvB;AAII,UAAA,YAAY,EAAEN,KAAK,CAACO,YAJxB;AAKI,UAAA,OAAO,EAAEP,KAAK,CAACQ,IAAN,GAAW,CALxB;AAMI,UAAA,OAAO,EAAER,KAAK,CAACQ,IAAN,GAAW,CANxB;AAOI,UAAA,IAAI,EAAER,KAAK,CAACS,gBAPhB;AAQI,UAAA,KAAK,EAAET,KAAK,CAACU,IARjB;AASI,UAAA,QAAQ,EAAEV,KAAK,CAACI,SATpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,OAbO,CAAR;AAcH;;AACD,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,KADL,CADJ;AAKH;;AA9C+B;;AAiDpC,eAAejB,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Match from '../../Match/Match';\nimport axios from '../../../axios-matches';\n\nclass LiveMatches extends Component {\n\n    state = {\n        liveMatches: []\n    }\n\n    componentDidMount() {\n        this.fetchLiveMatches();\n    }\n\n    fetchLiveMatches() {\n        let obj = {\n            \"apikey\": \"tTzabHsmnIPgA6CNdPwKGRCpduW2\"\n        }\n        axios.post('', obj)\n            .then(res => {\n                console.log(res);\n                this.setState({ liveMatches: res ? res.data ? res.data.matches : [] : [] })\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        let match = 'No matches available';\n        if (this.state.liveMatches.length > 1) {\n            const matchData = this.state.liveMatches;\n            match = matchData.map((match) => {\n                return (\n                    <Match\n                        key={match.unique_id}\n                        date={match.date}\n                        dateTimeGmt={match.dateTimeGmt}\n                        matchStarted={match.matchStarted}\n                        teamOne={match.team-1}\n                        teamTwo={match.team-2}\n                        toss={match.toss_winner_team}\n                        tyepe={match.type}\n                        uniqueId={match.unique_id}\n                    />)\n            })\n        }\n        return (\n            <Aux>\n                {match}\n            </Aux>\n        )\n    }\n}\n\nexport default LiveMatches;"]},"metadata":{},"sourceType":"module"}