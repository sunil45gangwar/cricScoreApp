{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  data: {},\n  error: false\n};\n\nconst fetchMatches = (state, action) => {\n  return updateObject(state, {\n    data: action.data,\n    error: false\n  });\n};\n\nconst fetchMatchesFailed = (state, action) => {\n  return updateObject(state, {\n    error: true\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.fetchMatches:\n      return fetchMatches(state, action);\n\n    case actionTypes.fetchMatchesFailed:\n      return fetchMatchesFailed(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/clouddive-2-sunil/React/cric-score-app/src/Store/reducers/fetchMatches.js"],"names":["actionTypes","updateObject","initialState","data","error","fetchMatches","state","action","fetchMatchesFailed","reducer","type"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;;AAKA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,SAAON,YAAY,CAAEK,KAAF,EAAS;AACxBH,IAAAA,IAAI,EAAGI,MAAM,CAACJ,IADU;AAExBC,IAAAA,KAAK,EAAE;AAFiB,GAAT,CAAnB;AAIH,CALD;;AAOA,MAAMI,kBAAkB,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC1C,SAAON,YAAY,CAAEK,KAAF,EAAS;AAAEF,IAAAA,KAAK,EAAE;AAAT,GAAT,CAAnB;AACH,CAFD;;AAIA,MAAMK,OAAO,GAAG,CAAEH,KAAK,GAAGJ,YAAV,EAAwBK,MAAxB,KAAoC;AAChD,UAASA,MAAM,CAACG,IAAhB;AACI,SAAKV,WAAW,CAACK,YAAjB;AAA+B,aAAOA,YAAY,CAACC,KAAD,EAAQC,MAAR,CAAnB;;AAC/B,SAAKP,WAAW,CAACQ,kBAAjB;AAAqC,aAAOA,kBAAkB,CAACF,KAAD,EAAQC,MAAR,CAAzB;;AACrC;AAAS,aAAOD,KAAP;AAHb;AAKH,CAND;;AAQA,eAAeG,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    data: {},\n    error: false\n};\n\nconst fetchMatches = (state, action) => {\n    return updateObject( state, {\n        data:  action.data,\n        error: false\n    } );\n};\n\nconst fetchMatchesFailed = (state, action) => {\n    return updateObject( state, { error: true } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.fetchMatches: return fetchMatches(state, action);    \n        case actionTypes.fetchMatchesFailed: return fetchMatchesFailed(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}